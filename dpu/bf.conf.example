# UPDATE_DPU_OS - Update/Install BlueField Operating System (Default: yes)
UPDATE_DPU_OS="yes"
# ubuntu_PASSWORD='$1$..................'

###############################################################################
# Other misc configuration
###############################################################################

# MAC address of the rshim network interface (tmfifo_net0).
NET_RSHIM_MAC=00:1a:ca:ff:ff:11

# bfb_modify_os â€“ SHELL function called after the file system is extracted on the target partitions.
# It can be used to modify files or create new files on the target file system mounted under
# /mnt. So the file path should look as follows: /mnt/<expected_path_on_target_OS>. This
# can be used to run a specific tool from the target OS (remember to add /mnt to the path for
# the tool).

bfb_modify_os()
{
    # Set hostname
    local hname="rome1-dpu"
    echo ${hname} > /mnt/etc/hostname
    echo "127.0.0.1 ${hname}" >> /mnt/etc/hosts

    # Overwrite the tmfifo_net0 interface to set correct IP address
    # This is relevant in case of multiple DPU system.
    cat << EOFNET > /mnt/var/lib/cloud/seed/nocloud-net/network-config
version: 2
renderer: NetworkManager
ethernets:
  tmfifo_net0:
    dhcp4: false
    addresses:
      - 192.168.100.2/30
  oob_net0:
    dhcp4: true
    dhcp6: true
bonds:
  bond0: {}
EOFNET

    # Modules for kubernetes and DPDK
    cat << EOFMODULES >> /mnt/etc/modules-load.d/custom.conf
overlay
br_netfilter
vfio_pci
bonding
EOFMODULES

    # sysctl settings for kubernets
    cat << EOFSYSCTL >> /mnt/etc/sysctl.d/kubernetes.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_forward = 1
EOFSYSCTL

    # Provision hugepages as part of grub boot
    # Default to 2M hugepage size and provision 24.5 GB of hugepages
    # TMM requires 1.5GB of hugepages per thread (CPU core) totaling
    # 24GB to run on all 16 threads of the DPU.
    local hpage_grub="default_hugepagesz=2MB hugepagesz=2M hugepages=8192"
    sed -i -E "s|^(GRUB_CMDLINE_LINUX=\")(.*)\"|\1${hpage_grub}\"|" /mnt/etc/default/grub
    ilog "$(chroot /mnt env PATH=$PATH /usr/sbin/grub-mkconfig -o /boot/grub/grub.cfg)"

    # Provision SF to be used by the TMM on each PF
    rm -f /mnt/etc/mellanox/mlnx-sf.conf
    for pciid in $(lspci -nD 2> /dev/null | grep 15b3:a2d[26c] | awk '{print $1}')
        do
            cat << EOFSF >> /mnt/etc/mellanox/mlnx-sf.conf
/sbin/mlnx-sf --action create --device $pciid --sfnum 0 --enable-trust --hwaddr $(uuidgen | sed -e 's/-//;s/^\(..\)\(..\)\(..\)\(..\)\(..\).*$/02:\1:\2:\3:\4:\5/')
/sbin/mlnx-sf --action create --device $pciid --sfnum 1 --enable-trust --hwaddr $(uuidgen | sed -e 's/-//;s/^\(..\)\(..\)\(..\)\(..\)\(..\).*$/02:\1:\2:\3:\4:\5/')
/sbin/mlnx-sf --action create --device $pciid --sfnum 2 --enable-trust --hwaddr $(uuidgen | sed -e 's/-//;s/^\(..\)\(..\)\(..\)\(..\)\(..\).*$/02:\1:\2:\3:\4:\5/')
EOFSF
        done

# F5 BNK 2.0.0 GA defaults:
#     OVS_BRIDGE1="sf_external"
#     OVS_BRIDGE1_PORTS="p0 en3f0pf0sf1"
#     OVS_BRIDGE2="sf_internal"
#     OVS_BRIDGE2_PORTS="p1 en3f1pf1sf1 pf1vf0"

    cat <<EOFSF > /mnt/etc/mellanox/mlnx-ovs.conf
CREATE_OVS_BRIDGES="yes"
OVS_BRIDGE1="br-lag"
OVS_BRIDGE1_PORTS="bond0 pf0hpf en3f0pf0sf0 en3f0pf0sf1 en3f0pf0sf2 en3f1pf1sf0 en3f1pf1sf1 en3f1pf1sf2 pf0vf0 pf0vf1 pf0vf2 pf0vf3"
OVS_BRIDGE2=""
OVS_BRIDGE2_PORTS="dummy" # prevents bridge2 from being created
OVS_HW_OFFLOAD="yes"
OVS_TIMEOUT=300
OVS_BR_PORTS_TIMEOUT=30
EOFSF

    # Cloud-init for upgrading containerd and runc
    cat << EOFCLOUDINIT >> /mnt/var/lib/cloud/seed/nocloud-net/user-data
write_files:
  - path: /etc/systemd/system/bond0.service
    permissions: '0644'
    content: |
      [Unit]
      Description=Bond Service
      After=network.target

      [Service]
      Type=oneshot
      ExecStart=/bin/bash /usr/sbin/create-bond0.sh
      RemainAfterExit=no

      [Install]
      WantedBy=multi-user.target
  - path: /usr/sbin/create-bond0.sh
    permissions: '0755'
    content: |
      #!/bin/bash
      echo "stopping openibd ..."
      systemctl stop openibd
      echo "deleting bond0 ..."
      ip link del bond0
      echo "starting openibd ..."
      systemctl start openibd
      echo "creating bond0 ..."
      ip link add bond0 type bond
      ip link set bond0 down
      ip link set bond0 type bond miimon 100 mode 4 xmit_hash_policy layer3+4 lacp_rate fast
      ip link set p0 down
      ip link set p1 down
      ip link set p0 master bond0
      ip link set p1 master bond0
      ip link set p0 up
      ip link set p1 up
      ip link set bond0 up
  - path: /var/tmp/setup-script.sh
    permissions: '0755'
    content: |
      #!/bin/bash
      systemctl stop containerd kubelet kubepods.slice
      rm -rf /var/lib/containerd/*
      rm -rf /run/containerd/*
      rm -f /usr/lib/systemd/system/kubelet.service.d/90-kubelet-bluefield.conf
      systemctl enable --now bond0
      systemctl daemon-reload
runcmd:
  - [ /var/tmp/setup-script.sh ]
EOFCLOUDINIT
}
